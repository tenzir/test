name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.12", "3.13"]
        exclude:
          - os: macos-latest
            python-version: "3.13"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --python ${{ matrix.python-version }} --dev

      - name: Ruff lint
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        run: uv run ruff check

      - name: Ruff format (check)
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        run: uv run ruff format --check

      - name: Type check
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        run: uv run mypy

      - name: Run tests
        run: uv run pytest --durations=10

  build:
    name: Build distribution
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Set up Python
        run: uv python install 3.12

      - name: Build package
        run: |
          uv build
          ls -la dist/

      - name: Check package metadata
        run: |
          uv venv
          uv pip install check-wheel-contents twine
          uv run check-wheel-contents dist/*.whl
          uv run twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          retention-days: 7

  test-install:
    name: Test installation from artifact
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Smoke test wheel
        run: uvx --from dist/*.whl tenzir-test --help
